Data Representation

Data Representation is the way that data is represented for computers.

Binary And Hexedecimal

Binary

Binary in the lowest level way that computers store data and use the data to calculate with it.

So lets say we have a Denary number 63 and we use an 8 bit binary system we would first have to make the table that is used to calculate it. As Binary is a base 2 number system so either 1 or 0 we have to double the last value to fill out the table.

1 | 2 | 4 | 8 | 16 | 32 | 64 | 128

So now using this we can take 63

first we ask. Dose it fit into 128 no. Then a 0
next we ask dose it fit into 64. no. Then a 0
32 yes 1 and we minus 32 from 63 so 63 becomes 31
16 yes 31 - 16 = 15
8 yes 15 - 8 = 7
4 yes 7 - 4 = 3
2 yes 3 - 2 = 1
1 yes 1 - 1 = 0

So when we fill this out we get
128 | 64 | 32 | 16 | 8 | 4 | 2 | 1
0   | 0  | 1  | 1  | 1 | 1 | 1 | 1

so now we know 63 = 00111111

Hexadecimal

Hexadecimal uses a 16 base number system which the table looks like this

0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15
0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | A  | B  | C  | D  | E  | F

Now to convert from Denary to hexadecimal we first have to convert the number from Denary to Binary. So lets take 63 as we already know what it is. when we have 63 in binary 00111111 we must split it into sets of 4 so set one is 0011 and set two is 1111 we must now convert these 4 bit numbers back to denary

8 | 4 | 2 | 1
0 | 0 | 1 | 1 = 3
1 | 1 | 1 | 1 = 15

so we have 3 and 15 so lets look back at the conversion table and we see 3 = 3 and that 15 = F so that means 63 in Hexadecimal is 3F.

Binary manipulation and Negative number

Binary Addition

With Binary Addition there are 4 rules:

Rule 1: 0 + 0 = 0
Rule 2: 0 + 1\ 0 + 1 = 1
Rule 3: 1 + 1 = 10
Rule 4: 1 + 1 + 1 = 11

So lets use Rule 1 with the numbers 10010100 and 00011110

1 | 0 | 0 | 1 | 0 | 1 | 0 | 0
0 | 0 | 0 | 1 | 1 | 1 | 1 | 0
1 | 0 | 1 | 1 | 0 | 0 | 1 | 0 

Representing Sound and Images

When a computer represents an image there is information called colour depth
so if we were to displat a one bit or black and white iamage a bit either represents 0 white or black 0

Now when we want colour we can use diffrent levels of colour depth E. G. 8 bit 16 bit and 32 bit

With the increase of colour depth the image quality increases as well as the size. 

Now when we want to store sound we we use a diffrent system. First we have a ADC (Analouge to Digital converter) with the ADC we can have diffrent Sample Depth which is the amount of bits the ADC has We also have something called a Sample Rate which is how many times a sample is taken or the rate at which a sample is taken.

So when recording audio the higer the Sample rate the higer sould resoloution and the larger the file becomes

Measuring Data Storage

Data is stored using diffrent units these unit are:

bit | Smallest unit of data mesurement
bibble | 4 bits
byte | 8 bits
Kibibyte (KiB) | 1024 bytes
Mebibyte (MiN) | 1024 Kibibytes
Gibibyte (GiB) | 1024 Mebibytes
Tebibyte (TiB) | 1024 Gibinytes
Pebibyte (PiB) | 1024 Tebibytes
Exbibyte (EiB) | 1024 Pebibytes

Data Compression

Sometimes we need to make a file smaller. This is where we can use compression. Their are two types of Compression Lossy and Lossless.

Lossy compression

lossy compression works by grouping tougether similar values and removing ones that are unneccesery

Well lossless compression just collects similar values to make it smaller.













